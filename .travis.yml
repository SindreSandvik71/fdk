sudo: required

matrix:
  include:
    - language: java
      jdk:
        - oraclejdk8
    - language: node_js
      node_js:
      - "lts/8"

notifications:
    slack: fdk-project:SK6k3zGFlrMDGQBX0jSDSvPy
    webhooks: https://coveralls.io/webhook?repo_token=COVERALLS_REPO_TOKEN

services:
  - docker # enable docker support in travis

apt:
  sources:
    - google-chrome # we need to install chrome for running the Angular e2e tests
  packages:
    - google-chrome-stable

before_install:

install:
  - export COVERALLS_PARALLEL=true # ensure coverage results are merged after all parallell jobs have finished
  - export DOCKER_HOST=unix:///var/run/docker.sock # required by the docker maven plugin for connecting to docker
  - export CHROME_BIN=chromium-browser # this line and the next two lines are required for running up chrome
  - export DISPLAY=:99.0
  - sh -e /etc/init.d/xvfb start

branches:
  except:
    - /ut1_.*/
    - /st1_.*/
    - /st2_.*/
    - /tt1_.*/
    - /ppe_.*/
jobs:
  include:
    - stage: Build # First build the project to look for syntax/build problems
      script: travis_wait mvn install -DskipTests -Dmaven.javadoc.skip=true
      env:
      - comment=First build the project to look for syntax/build problems

    - stage: Tests # Run regular unit tests
      script: mvn install -DskipTests -DskipDockerBuild -Dmaven.javadoc.skip=true -Dmaven.exec.skip=true -B > /dev/null && mvn test -B
      after_success:
       - mvn org.eluder.coveralls:coveralls-maven-plugin:report
      env:
        - comment=Run regular unit tests

    - stage: Tests # Run regular React unit tests
      script: cd applications && npm --prefix search install npm -g npm@'>=5.4.2' && npm --prefix search install && npm --prefix search test
      after_success: npm --prefix search run coverage
      env:
      - comment=Run regular React unit tests + generate test coverage report

    - stage: Tests # Run regular React unit tests Registration
      script: cd applications/registration-react && npm install npm -g npm@'>=5.4.2' && npm install && npm test
      after_success: npm run coverage
      env:
      - comment=Run regular React unit tests Registration + generate test coverage report

    - stage: Tests # Run unit and integration tests + generate test coverage report
      if: type = cron #run only during nightly cron job - time-consuming operation
      script: mvn install -DskipTests -Dmaven.javadoc.skip=true -B && docker-compose up -d  && ./waitForDocker.sh  &&  mvn failsafe:integration-test -DskipDockerBuild -B -P integration-test org.jacoco:jacoco-maven-plugin:report
      after_success:
      - mvn org.eluder.coveralls:coveralls-maven-plugin:report
      env:
      - comment=Run unit and integration tests + generate test coverage report


    #- stage: Tests # Run Angular e2e tests
    #  if: type = cron #run only during nightly cron job - time-consuming operation
    #  script: mvn install -DskipTests -Dmaven.javadoc.skip=true -B && docker-compose up -d  && ./waitForDocker.sh &&  ./runNodeTests.sh
    #  env:
    #    - comment=Run Angular e2e tests

    #- stage: Tests # Run end-to-end tests + generate test coverage report
    #  if: type = cron #run only during nightly cron job - time-consuming operation
    #  script: mvn install -DskipTests -Dmaven.javadoc.skip=true -B && docker-compose up -d  && ./waitForDocker.sh  &&  mvn verify -DskipDockerBuild -B -P end-to-end-test org.jacoco:jacoco-maven-plugin:report
    #  after_success:
    #    - mvn org.eluder.coveralls:coveralls-maven-plugin:report
    #  env:
    #    - comment=Run end-to-end (Cucumber) tests

    - stage: deploy
      if: branch = develop # only deploy when building develop
      script: mvn install -DskipTests -Dmaven.javadoc.skip=true -B ;
      deploy:
        provider: script
        skip_cleanup: true
        script:
          - ./travisPushToDockerHub.sh
        on:
          branch: develop
          condition: $TRAVIS_TAG = ''
