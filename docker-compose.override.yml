version: "3"

services:
  search:
    build: ./applications/search
    restart: always
    command: npm start
    ports:
       - "3000:3000"
    volumes:
      - ./applications/search/src:/usr/src/app/src:rw
    environment:
      - REDUX_LOG=${REDUX_LOG}
      - NODE_ENV=${NODE_ENV}

  search-api:
    restart: always
    ports:
      - "8083:8080"
    environment:
     - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx256M -Dspring.profiles.active=docker
#     - application.elasticsearchHost=es01-fdk-01-ut1.regsys-nprd.brreg.no
     - application.elasticsearchHost=elasticsearch
#     - clusterNode=es01-fdk-01-ut1.regsys-nprd.brreg.no
     - clusterNode=elasticsearch
     - application.elasticsearchPort=9300

  nginx-search:
    restart: always
    ports:
      - "8080:8080"

  fuseki:
    restart: always
    volumes:
      - ./data/fuseki:/etc/fuseki/databases/
    ports:
     - "3030:8080"

  harvester-api:
    restart: always
    ports:
     - "8081:8080"
    environment:
     - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx1024M -Dspring.profiles.active=docker
     - fuseki.dcatServiceUri=http://fuseki:8080/fuseki/dcat
     - fuseki.adminServiceUri=http://fuseki:8080/fuseki/admin
     - application.crawlerThreadPoolSize=2
#     - application.elasticSearchHost=es01-fdk-01-ut1.regsys-nprd.brreg.no
     - application.elasticsearchHost=elasticsearch
#     - clusterNode=es01-fdk-01-ut1.regsys-nprd.brreg.no
     - clusterNode=elasticsearch
     - application.elasticSearchPort=9300
     - application.elasticSearchCluster=${FDK_ES_CLUSTERNAME:elasticsearch}
     - clusterName=${FDK_ES_CLUSTERNAME:elasticsearch}
    volumes:
     - ./logs:/usr/local/tomcat/logs:rw

  harvester:
    restart: always
    ports:
     - "8082:8080"
    environment:
     - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx256M -Dspring.profiles.active=docker
     - fuseki.dcatServiceUri=http://fuseki:8080/fuseki/dcat
     - fuseki.adminServiceUri=http://fuseki:8080/fuseki/admin
     - application.harvesterUrl=http://harvester-api:8080
     - application.kibanaLinkFirstHalf="/app/kibana/#/dashboard/dashboard_template?_g=(refreshInterval:(display:Off,pause:!f,value:0),time:(from:now-24h,mode:quick,to:now))&_a=(filters:!(),options:(darkTheme:!f),panels:!((col:4,id:Crawler-Operations,panelIndex:1,row:3,size_x:9,size_y:3,type:visualization),(col:1,id:Crawler-Results,panelIndex:2,row:3,size_x:3,size_y:3,type:visualization),(col:1,id:Crawler-Metadata,panelIndex:4,row:1,size_x:12,size_y:2,type:visualization),(col:7,id:Validation-RuleId,panelIndex:6,row:6,size_x:6,size_y:4,type:visualization),(col:1,columns:!(ruleSeverity,event,cause,ruleId),id:validation_ruleId,panelIndex:7,row:6,size_x:6,size_y:4,sort:!(timestamp,desc),type:search)),query:(query_string:(analyze_wildcard:!t,query:'%22"
     - application.kibanaLinkSecondHalf="%22')),title:dashboard_template,uiState:())"
     - harvester_adminUsername=test_admin
     - harvester_adminPassword=password
    volumes:
     - ./logs:/usr/local/tomcat/logs:rw

  elasticsearch:
    restart: always
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./data/esdata:/usr/share/elasticsearch/data
    environment:
      - cluster.name=${FDK_ES_CLUSTERNAME:elasticsearch}
      - xpack.security.enabled=false

  elasticsearch-copy:
    restart: always
    volumes:
    - ./data/escopy:/escopydata

  dev-management:
    restart: always
    ports:
      - "8085:8080"
    environment:
     - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx256M -Dspring.profiles.active=docker
#     - application.elasticsearchHost=es01-fdk-01-ut1.regsys-nprd.brreg.no
     - application.elasticsearchHost=elasticsearch
#     - clusterNode=es01-fdk-01-ut1.regsys-nprd.brreg.no
     - clusterNode=elasticsearch
     - application.elasticsearchPort=9300
     - application.elasticsearchCluster=${FDK_ES_CLUSTERNAME:elasticsearch}
     - clusterName=${FDK_ES_CLUSTERNAME:elasticsearch}
     - application.fusekiHost=http://fuseki:8080
     - application.harvesterHost=http://harvester-api:8080

  nginx-registration:
    restart: always

  nginx-registration-ssl:
    image: dcatno/nginx-registration-ssl:latest
    restart: always
    ports:
      - "8098:443"
    depends_on:
      - nginx-registration
      - registration-react

  registration-api:
    restart: always
    ports:
      - "8079:8080"
    environment:
     - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx256M -Dspring.profiles.active=docker
     - registrationAPI_clusterName=${FDK_ES_CLUSTERNAME:elasticsearch}
     - registrationApi_altinnServiceUrl=http://registration-auth:8080
     - registrationApi_apikey=${registrationApi_apikey}
     - registrationApi_clientSSLCertificateKeystoreLocation=conf/dummy-client-SSL-cert.p12
     - registrationApi_clientSSLCertificateKeystorePassword=password
     - registrationApi_harvesterUsername=test_admin
     - registrationApi_harvesterPassword=password
     - registrationApi_ipKeyPassword=${registrationApi_ipKeyPassword}
     - registrationApi_ipStorePassword=${registrationApi_ipStorePassword}

  registration-react:
    build: ./applications/registration-react
    restart: always
    command: npm start
    ports:
     - "4300:4300"
    volumes:
     - ./applications/registration-react/src:/usr/src/app/src:rw
    environment:
     - REGISTRATION_LANGUAGE=${REGISTRATION_LANGUAGE}
     - NODE_ENV=${NODE_ENV}

  registration-auth:
      restart: always
      ports:
        - "8077:8080"
      environment:
        - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx256M -Dspring.profiles.active=docker

  reference-data:
    restart: always
    ports:
      - "8100:8080"
    environment:
     - JAVA_OPTS=-Djava.security.egd=file:/dev/./urandom -Xmx256M -Dspring.profiles.active=docker


#  logstash:
#    image: "dcatno/logstash:${TAG}"
#    entrypoint: /opt/logstash/bin/logstash -f /etc/logstash/conf.d/logstash.conf
#    volumes:
#      - ./logs:/usr/local/tomcat/logs:rw

  kibana:
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://es01-fdk-01-ut1.regsys-nprd.brreg.no:9200
    #volumes:
    #      - ./data/kibana/config/:/opt/kibana/config/


  e2e:
    build: ./applications/e2e
    volumes:
      -   ./applications/e2e/test:/usr/src/app/test:rw
    command: tail -F /dev/null